package Set;

import java.util.TreeSet;

/*
红黑树
特点；
1.每一个节点是红色的，或者是黑色的。
2.根节点必须是黑色的。
3.如果一个节点没有子节点或者父节点，则该节点相应的指针属性为Nil,这些nil视为叶节点，每个叶节点是黑色的。
4.如果一个节点是红色的，那么它的子节点必须是黑色的（不能出现两个红色节点相连的情况）
5.对每一个节点，从该节点到其所有后代叶节点的简单路径上，均包含相同数目的黑色节点。

添加节点：添加节点的颜色，可以是红色，也可以是黑色
添加的节点默认是红色的，如果为根节点，直接变成黑色。
如果是非根节点，父节点为黑色，则不需要任何操作。
父节点为红色
1.叔叔节点为红色，将父节点设置为黑色，将叔叔设为黑色；将祖父节点设置为红色；如果祖父节点为根节点，则将根节点再次变为黑色。
2.叔叔节点为黑色，将父节点设置为黑色；将祖父节点设为红色，以祖父节点为支点进行旋转。

 */
public class redblackTree_structure {
    //存储字符串并遍历
    public static void main(String[] args) {
        TreeSet<Integer> ts = new TreeSet<>();
        ts.add(5);
        ts.add(4);
        ts.add(3);
        ts.add(2);
        ts.add(1);

        System.out.println(ts);

    }
}
